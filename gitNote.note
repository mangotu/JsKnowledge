## 获取 Git 仓库
- 有两种取得 Git 项目仓库的方法。 第一种是在现有项目或目录下导入所有文件到 Git 中； 第二种是从一个服务器克隆一个现有的 Git 仓库。
 
 1) 在现有目录中初始化仓库
        如果你打算使用 Git 来对现有的项目进行管理，你只需要进入该项目目录并输入：git init 
 2) 克隆现有的仓库   
        如果你想获得一份已经存在了的 Git 仓库的拷贝: git clone 
 
 ## 检查当前文件状态
    git status 
    git status -s //一种更为紧凑的格式输出

 ## 跟踪新文件
    git add . //将所有文件进行跟踪，并处于暂存状态
 
 ## 忽略文件 .gitignore(文件)
  *.[oa] 忽略所有以 .o 或 .a 结尾的文件
  *~忽略所有以波浪符（~）结尾的文件
    忽略的规范 :

        1.所有空行或者以 ＃ 开头的行都会被 Git 忽略。

        2.可以使用标准的 glob 模式匹配。 //是指 shell 所使用的简化了的正则表达式

        3.匹配模式可以以（/）开头防止递归。

        4.匹配模式可以以（/）结尾指定目录。

        5.要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。
        
        //正则表达式

        星号（*）匹配零个或多个任意字符 
        [abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；
        问号（?）只匹配一个任意字符；    


 ## 查看已暂存和未暂存的修改
        如果 git status 命令的输出对于你来说过于模糊，你想知道具体修改了什么地方可以用 git diff 命令。 

        要查看尚未暂存的文件更新了哪些部分，不加参数直接输入 git diff
        若要查看已暂存的将要添加到下次提交里的内容，可以用 git diff --cached 命令

## 提交更新
    git commit 

## 移除文件
    git rm 文件名

## 提交历史记录
    git log 
    一个常用的选项是 -p，用来显示每次提交的内容差异。 你也可以加上 -2 来仅显示最近两次提交：

## 撤消操作
    有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行带有 --amend 选项的提交命令尝试重新提交：git commit --amend
        例如，你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：
            git commit -m 'initial commit'
            git add forgotten_file  
            git commit --amend
            最终你只会有一个提交 - 第二次提交将代替第一次提交的结果。

            撤消对文件的修改
             git checkout 文件名

## 远程仓库的使用

    1)查看远程仓库
        git remote -v

    2)添加远程仓库
        git remote add <shortname(默认origin> <url> 远程仓库地址

    3）从远程仓库中抓取与拉取 
        git fetch [remote-name]   

    4)推送到远程仓库
        git push origin master
    
    5)查看远程仓库
        git remote show origin    

    6)远程仓库的移除与重命名    
    如果想要重命名引用的名字可以运行 git remote rename 去修改一个远程仓库的简写名
    想要将 pb 重命名为 paul，可以用 git remote rename 这样做：
        git remote rename pb paul
        git remote //查看分支
        origin
        paul
    移除一个远程仓库     
        git remote rm paul
        git remote
        origin


 ## 分支创建
        git branch 分支名称
 
 ## 分支切换
        git checkout 分支名称
 
 ## 分支的新建与合并
        git merge 分支名称


 ## git常用命令

 - git add .  // 暂存所有的更改
 - git checkout . // 丢弃所有的更改
 - git status // 查看文件状态
 - git commit -m "本次要提交的概要信息"  
 - git push -u origin master //创建新分支并提交代码

 ## ssh key 的问题  windows
  删除重新生产 ssh 
  git-bash 输入：ssh-keygen -t rsa -C "youremail@example.com"  //复制.ssh文件夹下的 id_rsa.pub 的key